{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"resour",
				"resourceList	[]"
			],
			[
				"time",
				"timeobject	(?)"
			],
			[
				"to",
				"toString"
			],
			[
				"p",
				"path	(?)"
			],
			[
				"req",
				"require"
			],
			[
				"if",
				"if	if"
			],
			[
				"s",
				"str	{}"
			],
			[
				"f",
				"for	for (…) {…} (Improved Native For-Loop)"
			],
			[
				"te",
				"text-align"
			],
			[
				"alig",
				"vertical-align"
			],
			[
				"background",
				"background-color"
			],
			[
				"backgr",
				"background-image"
			],
			[
				"Mont",
				"Mongo.Collection	new Mongo.Collection(name, [options])"
			],
			[
				"Mongo",
				"Mongo.Collection	new Mongo.Collection(name, [options])"
			],
			[
				"Mon",
				"Mongo.Collection	new Mongo.Collection.ObjectID(hexString)"
			],
			[
				"proj",
				"project"
			],
			[
				"update",
				"updateVisible"
			],
			[
				"updateVi",
				"updateVisible"
			],
			[
				"eve",
				"events	Meteor: Template.myTemplate.events(eventMap)"
			],
			[
				"updateVisi",
				"updateVisibleState"
			],
			[
				"Session",
				"Session.set	Meteor: Session.set(key, value)"
			],
			[
				"va",
				"var"
			],
			[
				"al",
				"alt	Attr"
			],
			[
				"back",
				"background-color"
			],
			[
				"backgrou",
				"background-position"
			],
			[
				"padd",
				"padding"
			],
			[
				"pad",
				"padding"
			],
			[
				"pa",
				"padding-right"
			],
			[
				"padding",
				"padding"
			],
			[
				"mar",
				"margin"
			],
			[
				"border",
				"border-radius"
			],
			[
				"t",
				"title	Attr"
			],
			[
				"in",
				"inline-block"
			],
			[
				"sty",
				"list-style-type"
			],
			[
				"text",
				"text-align"
			],
			[
				"max-",
				"max-width"
			],
			[
				"wid",
				"width"
			],
			[
				"marg",
				"margin"
			],
			[
				"max",
				"max-width"
			],
			[
				"margin",
				"margin"
			],
			[
				"v",
				"vertical-align"
			],
			[
				"bor",
				"border-color"
			],
			[
				"c",
				"color"
			],
			[
				"ali",
				"vertical-align"
			],
			[
				"align",
				"text-align"
			],
			[
				"font",
				"font-size"
			],
			[
				"bac",
				"background-color"
			],
			[
				"paddin",
				"padding-bottom"
			]
		]
	},
	"buffers":
	[
		{
			"file": "app.js",
			"settings":
			{
				"buffer_size": 1642,
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/layout.jade",
			"settings":
			{
				"buffer_size": 127,
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/index.jade",
			"settings":
			{
				"buffer_size": 104,
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/newresource.jade",
			"settings":
			{
				"buffer_size": 291,
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/resources.jade",
			"settings":
			{
				"buffer_size": 185,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "var express = require('express');\nvar router = express.Router();\n\nvar pg = require('pg');\nvar conString = \"postgres://kevin:@localhost/kevin\";\n\nvar resourceList = [];\n\n/* GET resources listing. */\nrouter.get('/', function(req, res, next) {\n\n	var mongoose = require('mongoose');\n	mongoose.connect('mongodb://localhost/test');\n\n	var resource = mongoose.model('resource', { name: String, counter: int });\n\n	var newresource = new Cat({ name: 'Zildjian' });\n	kitty.save(function (err) {\n	  if (err) \n	  	res.writeHead(500, {'content-type': 'text/plain'});\n	    res.end('An error occurred');\n	});\n\n	pg.connect(conString, function(err, client, done) {\n\n	    var handleError = function(err) {\n	      // no error occurred, continue with the request\n	      if(!err) return false;\n\n	      // An error occurred, remove the client from the connection pool.\n	      // A truthy value passed to done will remove the connection from the pool\n	      // instead of simply returning it to be reused.\n	      // In this case, if we have successfully received a client (truthy)\n	      // then it will be removed from the pool.\n	      done(client);\n	      res.writeHead(500, {'content-type': 'text/plain'});\n	      res.end('An error occurred');\n	      return true;\n	    };\n\n	    client.query('SELECT name FROM dux_resources', function(err, result) {\n\n        	// handle an error from the query\n	        if(handleError(err)) return;\n	        resourceList = result.rows;\n	        \n	         for (var i = 0; i < result.rows.length; i++) {\n	         	resourceList[i] = result.rows[i].name\n			 }\n\n		    // return the client to the connection pool for other requests to reuse\n		    done();\n		});\n    });\n	res.render('resources', {title: 'Resources', resources: resourceList})\n});\n\nrouter.get('/new', function(req, res, next) {\n  res.render('newresource')\n}); \n\nrouter.post('/', function(req,res){\n    var mongoose = require('mongoose');\n	mongoose.connect('mongodb://localhost/local');\n\n	var resource = mongoose.model('resource', { name: String, counter: int });\n\n	var newresource = new Cat({ name: req.body.name, counter: req.body.counter });\n	newresource.save(function (err) {\n	  if (err) \n	  	res.writeHead(500, {'content-type': 'text/plain'});\n	    res.end('An error occurred');\n	});\n\n	res.render('resources', {title: 'Resources', resources: resourceList})\n});\n\nmodule.exports = router;\n",
			"file": "routes/resources.js",
			"file_size": 2354,
			"file_write_time": 130704732690000000,
			"settings":
			{
				"buffer_size": 2360,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 247.0,
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			]
		],
		"width": 695.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/kevin/Sites/duxboard",
		"/Users/kevin/Sites/duxboard/bin",
		"/Users/kevin/Sites/duxboard/bower_components/tink",
		"/Users/kevin/Sites/duxboard/bower_components/tink/app/styles",
		"/Users/kevin/Sites/duxboard/bower_components/tink/framework",
		"/Users/kevin/Sites/duxboard/bower_components/tink/framework/scripts",
		"/Users/kevin/Sites/duxboard/bower_components/tink/framework/styles",
		"/Users/kevin/Sites/duxboard/public",
		"/Users/kevin/Sites/duxboard/public/images",
		"/Users/kevin/Sites/duxboard/public/javascripts",
		"/Users/kevin/Sites/duxboard/public/stylesheets",
		"/Users/kevin/Sites/duxboard/routes",
		"/Users/kevin/Sites/duxboard/views"
	],
	"file_history":
	[
		"/Users/kevin/Sites/duxboard/routes/newresource.js",
		"/Users/kevin/Sites/duxboard/package.json",
		"/Users/kevin/Sites/duxboard/README.md",
		"/Users/kevin/Sites/duxboard/app.js",
		"/Users/kevin/Sites/nodeschool/learnyounode/program7.js",
		"/Users/kevin/Sites/nodeschool/learnyounode/program8.js",
		"/Users/kevin/Sites/nodeschool/learnyounode/program10.js",
		"/Users/kevin/Sites/nodeschool/learnyounode/program13.js",
		"/Users/kevin/Sites/nodeschool/learnyounode/module.js",
		"/Users/kevin/Sites/nodeschool/learnyounode/program.js",
		"/Users/kevin/Sites/nodeschool/learnyounode/program11.js",
		"/Users/kevin/Sites/nodeschool/express/ex8.js",
		"/Users/kevin/Sites/nodeschool/express/ex7.js",
		"/Users/kevin/Sites/nodeschool/express/ex6.js",
		"/Users/kevin/Sites/nodeschool/express/ex5.js",
		"/Users/kevin/Sites/nodeschool/express/ex4.js",
		"/Users/kevin/Sites/nodeschool/express/ex3.js",
		"/Users/kevin/Sites/nodeschool/express/ex2.js",
		"/Users/kevin/Sites/nodeschool/express/ex1.js",
		"/Users/kevin/Sites/nodeschool/express/index.html",
		"/Users/kevin/Sites/duxboard/views/index.jade",
		"/Users/kevin/Sites/duxboard/index.html",
		"/Users/kevin/Sites/node-js-getting-started/.env",
		"/Users/kevin/Sites/node-js-getting-started/package.json",
		"/Users/kevin/Sites/node-js-getting-started/index.js",
		"/Users/kevin/Sites/nodeschool/javascripting/javascripting/introduction.js",
		"/Users/kevin/Sites/nodeschool/javascripting/javascripting/variables.js",
		"/Users/kevin/Sites/nodeschool/javascripting/javascripting/strings.js",
		"/Users/kevin/Downloads/encrypted (1).asc",
		"/Users/kevin/Downloads/nginx-access.log.2",
		"/Users/kevin/Library/Application Support/Sublime Text 3/Packages/Package Control/Package Control.sublime-settings",
		"/Users/kevin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/kevin/Documents/www/tink_demo_2/index.html",
		"/Users/kevin/Documents/www/tink_demo/index.html",
		"/Users/kevin/Sites/de_mulder_eu/index.html",
		"/Users/kevin/Sites/de_mulder_eu/css/main.css",
		"/Users/kevin/Documents/www/sass_css_js_tinkdocumentation/README.md",
		"/Users/kevin/Documents/www/de_mulder_eu/index.html",
		"/Users/kevin/Documents/www/de_mulder_eu/css/main.css",
		"/Users/kevin/Documents/www/kevindemulder_be/css/main.css",
		"/Users/kevin/Documents/www/kevindemulder_be/index.html",
		"/Volumes/VAULT/UX pres/video.html",
		"/Users/kevin/Downloads/end-to-end-master/README.md",
		"/Users/kevin/Sites/polymer_duxboard/index.html",
		"/Users/kevin/Sites/polymer_duxboard/elements/my-element.html",
		"/Users/kevin/Sites/polymer_duxboard/my-element.html",
		"/Users/kevin/Downloads/Plex Media Scanner.log.1",
		"/Users/kevin/Downloads/tink-0.3.1/css/tink-0.3.1.css",
		"/Users/kevin/Downloads/tink-0.3.1.css",
		"/Users/kevin/Documents/www/kevindemulder_be/form.html",
		"/Applications/MAMP/htdocs/kevindemulder.be/index.html",
		"/Applications/MAMP/htdocs/kevindemulder.be/css/responsive.css",
		"/Applications/MAMP/htdocs/kevindemulder.be/css/main.css",
		"/Applications/MAMP/htdocs/kevindemulder.be/contact.html",
		"/Applications/MAMP/htdocs/kevindemulder.be/css/normalize.css",
		"/Applications/MAMP/htdocs/kevindemulder.be/main.css",
		"/Users/kevin/Documents/www/sass_css_js_tink/Tink.sublime-project",
		"/Users/kevin/Desktop/BE68401902150134_Afschriften_tot_04-10-2014.csv",
		"/Users/kevin/Desktop/BE10001504615904EUR_280814-041014.csv",
		"/Users/kevin/Dropbox/usatrip/usatrip-20140804.sql",
		"/Volumes/USB DISK/filevault recovery key",
		"/Users/kevin/Desktop/filevault recovery key",
		"/Volumes/NO NAME/lastpass",
		"/Users/kevin/Desktop/keybase.txt",
		"/Volumes/NO NAME/kdemulder@gmail.com_keypair.asc",
		"/Volumes/NO NAME/clopin_fort9_keys.asc",
		"/Volumes/NO NAME/Kevin De Mulder mail@kevindemulder.be (0xC94571D2) pub-sec.asc",
		"/Volumes/NO NAME/digipolis_keys.asc",
		"/Volumes/NO NAME/passphrase_mails",
		"/usr/include/apache2/http_vhost.h",
		"/Users/kevin/Dropbox/Belastingen 2014/todo beslastingen.txt",
		"/Users/kevin/Documents/Geektool/weather/weather code script.glet",
		"/Users/kevin/Documents/Geektool/weather/weather image1.glet",
		"/Users/kevin/Downloads/eloketform.json",
		"/Volumes/video/Series/Arrow/Season 02/Arrow.S02E10.SD.TV-LOL.nl.srt",
		"/Volumes/NO NAME/filevault_recovery",
		"/Users/kevin/Library/Containers/com.apple.mail/Data/Library/Mail Downloads/51408CCC-3798-407D-9516-85C6E60EE9AF/renew_avatars.sh",
		"/Volumes/video/Series/Glee/Season 04/Glee.S04E04.HDTV.x264-LOL.srt",
		"/Applications/Sublime Text.app/Contents/MacOS/changelog.txt",
		"/Users/kevin/Library/Thunderbird/profiles.ini",
		"/Users/kevin/Downloads/arrow.state.vs.queen.(2013).tv.s02.e07.dut.3cd/Arrow.S02E07.1080p.WEB-DL.DD5.1.H.264-BS.srt",
		"/Users/kevin/Downloads/arrow.state.vs.queen.(2013).tv.s02.e07.dut.3cd/Arrow.S02E07.720p.HDTV.X264-DIMENSION.srt",
		"/Users/kevin/Downloads/arrow.state.vs.queen.(2013).tv.s02.e07.dut.3cd/Arrow.S02E07.720p.HDTV.X264-DIMENSION-eng.srt",
		"/Volumes/NO NAME 1/buffer one time password",
		"/Volumes/NO NAME 1/Untitled Document~"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"function",
			"');\n",
			"resources",
			"Resources",
			"resources",
			"kegel",
			"datum",
			"indent",
			"value",
			"email",
			"100px",
			"background-color: black;",
			"40px",
			";",
			",",
			";",
			",",
			"h3",
			"style=\"border: 0px; font-family: Lato, sans-serif; font-size: 16px; outline: 0px; padding: 0px; vertical-align: baseline; list-style-position: initial; list-style-image: initial; color: #2b2b2b; line-height: 24px;\"",
			"</span></span></div>",
			"<div style=\"font-family: Arial;\"><span style=\"color: #2b2b2b; font-family: Lato, sans-serif;\"><span style=\"line-height: 24px; font-size: 24px;\"><strong>",
			"style=\"border: 0px; font-family: inherit; font-style: inherit; outline: 0px; padding: 0px; vertical-align: baseline; color: #24890d;\" ",
			"<li style=\"border: 0px; font-family: inherit; font-style: inherit; outline: 0px; padding: 0px; vertical-align: baseline;\">"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			",",
			".",
			",",
			".",
			"h2",
			"",
			"</h3>",
			"<h3>",
			"",
			"<li>"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "app.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1642,
						"regions":
						{
						},
						"selection":
						[
							[
								898,
								898
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "views/layout.jade",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 127,
						"regions":
						{
						},
						"selection":
						[
							[
								12,
								12
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "views/index.jade",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 104,
						"regions":
						{
						},
						"selection":
						[
							[
								104,
								104
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "views/newresource.jade",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 291,
						"regions":
						{
						},
						"selection":
						[
							[
								125,
								125
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "views/resources.jade",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 185,
						"regions":
						{
						},
						"selection":
						[
							[
								83,
								83
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "routes/resources.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2360,
						"regions":
						{
						},
						"selection":
						[
							[
								419,
								419
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "duxboard.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 207.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
